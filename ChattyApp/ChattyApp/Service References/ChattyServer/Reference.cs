//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChattyApp.ChattyServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChattyServer.IMessageService", CallbackContract=typeof(ChattyApp.ChattyServer.IMessageServiceCallback))]
    public interface IMessageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/SendMessage", ReplyAction="http://tempuri.org/IMessageService/SendMessageResponse")]
        void SendMessage(ChattyDomain.MessageDto message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/SendMessage", ReplyAction="http://tempuri.org/IMessageService/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(ChattyDomain.MessageDto message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMessageService/LogMessage")]
        void LogMessage(ChattyDomain.MessageDto message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMessageService/LogMessage")]
        System.Threading.Tasks.Task LogMessageAsync(ChattyDomain.MessageDto message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/GetAll", ReplyAction="http://tempuri.org/IMessageService/GetAllResponse")]
        ChattyDomain.MessageDto[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/GetAll", ReplyAction="http://tempuri.org/IMessageService/GetAllResponse")]
        System.Threading.Tasks.Task<ChattyDomain.MessageDto[]> GetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/NotifyMessage", ReplyAction="http://tempuri.org/IMessageService/NotifyMessageResponse")]
        void NotifyMessage(ChattyDomain.MessageDto message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageServiceChannel : ChattyApp.ChattyServer.IMessageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageServiceClient : System.ServiceModel.DuplexClientBase<ChattyApp.ChattyServer.IMessageService>, ChattyApp.ChattyServer.IMessageService {
        
        public MessageServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MessageServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MessageServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendMessage(ChattyDomain.MessageDto message) {
            base.Channel.SendMessage(message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(ChattyDomain.MessageDto message) {
            return base.Channel.SendMessageAsync(message);
        }
        
        public void LogMessage(ChattyDomain.MessageDto message) {
            base.Channel.LogMessage(message);
        }
        
        public System.Threading.Tasks.Task LogMessageAsync(ChattyDomain.MessageDto message) {
            return base.Channel.LogMessageAsync(message);
        }
        
        public ChattyDomain.MessageDto[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<ChattyDomain.MessageDto[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
    }
}
